{"version":3,"sources":["types/Status.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Status","TodoList","todos","selectTodo","selectedTodoId","className","map","todo","cn","id","completed","title","type","onClick","TodoFilter","setStatus","setQuery","status","query","value","onChange","event","target","ALL","ACTIVE","COMPLETED","Error","placeholder","length","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","useState","user","setUser","userUploadError","setUserUploadError","getUserFromServer","a","userId","userFromServer","useEffect","href","email","name","App","todosFromServer","setTodosFromServer","uploadError","setUploadError","setSelectedTodoId","visibleTodos","todoToModal","find","getTodosFromServer","filter","toLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"iLAAYA,E,0FCSCC,EAA4B,SAAC,GAMpC,IAJFC,EAIC,EAJDA,MACAC,EAGC,EAHDA,WACAC,EAEC,EAFDA,eAGF,OACE,wBAAOC,UAAU,+BAAjB,UACE,gCACE,+BACE,mCACA,6BACE,sBAAMA,UAAU,OAAhB,SACE,mBAAGA,UAAU,qBAGjB,uCACA,wCAIJ,gCACGH,EAAMI,KAAI,SAAAC,GAAI,OACb,qBAEE,UAAQ,OACRF,UAAWG,IACT,CAAE,4BAA6BD,EAAKE,KAAOL,IAJ/C,UAOE,oBAAIC,UAAU,eAAd,SACGE,EAAKE,KAER,oBAAIJ,UAAU,eAAd,SACGE,EAAKG,WACJ,sBAAML,UAAU,OAAO,UAAQ,gBAA/B,SACE,mBAAGA,UAAU,qBAInB,oBAAIA,UAAU,2BAAd,SACE,mBAAGA,UAAWG,IAAG,CACf,mBAAoBD,EAAKG,UACzB,mBAAoBH,EAAKG,YAF3B,SAKGH,EAAKI,UAGV,oBAAIN,UAAU,8BAAd,SACE,wBACE,UAAQ,eACRA,UAAU,SACVO,KAAK,SACLC,QAAS,WACPV,EAAWI,EAAKE,KALpB,SAQE,sBAAMJ,UAAU,OAAhB,SACE,mBAAGA,UAAWG,IACZ,MACA,CACE,SAAUJ,IAAmBG,EAAKE,GAClC,eAAgBL,IAAmBG,EAAKE,eAvC7CF,EAAKE,c,SDlCVT,K,UAAAA,E,gBAAAA,E,uBAAAA,M,KESL,IAAMc,EAA8B,SAAC,GAOtC,IALFC,EAKC,EALDA,UACAC,EAIC,EAJDA,SACAC,EAGC,EAHDA,OACAC,EAEC,EAFDA,MAwBF,OACE,uBAAMb,UAAU,mBAAhB,UACE,mBAAGA,UAAU,UAAb,SACE,sBAAMA,UAAU,SAAhB,SACE,yBACE,UAAQ,eACRc,MAAOF,EACPG,SA5BW,SAACC,GAGpB,OAFkBA,EAAMC,OAAhBH,OAGN,KAAKnB,EAAOuB,IACVR,EAAUf,EAAOuB,KACjB,MAEF,KAAKvB,EAAOwB,OACVT,EAAUf,EAAOwB,QACjB,MAEF,KAAKxB,EAAOyB,UACVV,EAAUf,EAAOyB,WACjB,MAEF,QACE,MAAM,IAAIC,MAAM,4BAQd,UAKE,wBAAQP,MAAOnB,EAAOuB,IAAtB,iBAGA,wBAAQJ,MAAOnB,EAAOwB,OAAtB,oBAGA,wBAAQL,MAAOnB,EAAOyB,UAAtB,8BAON,oBAAGpB,UAAU,qDAAb,UACE,uBACE,UAAQ,cACRO,KAAK,OACLP,UAAU,QACVsB,YAAY,YACZR,MAAOD,EACPE,SAAU,SAACC,GACTL,EAASK,EAAMC,OAAOH,UAG1B,sBAAMd,UAAU,eAAhB,SACE,mBAAGA,UAAU,8BAGda,EAAMU,QACL,sBAAMvB,UAAU,gBAAgBwB,MAAO,CAAEC,cAAe,OAAxD,SAEE,wBACE,UAAQ,oBACRlB,KAAK,SACLP,UAAU,SACVQ,QAAS,WACPG,EAAS,gBChFZe,G,MAAmB,kBAC9B,qBAAK1B,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,wBCSnB,SAAS2B,EAAOC,GAEd,IARYC,EAQNC,EAZS,iEAYYF,EAAM,QAGjC,OAXYC,EAWA,IAVL,IAAIE,SAAQ,SAAAC,GACjBC,WAAWD,EAASH,OAUnBK,MAAK,kBAAMC,MAAML,MACjBI,MAAK,SAAAE,GAAG,OAAIA,EAAIC,UAGd,ICbMC,EAA6B,SAAC,GAA0B,IAAxBpC,EAAuB,EAAvBA,KAAMJ,EAAiB,EAAjBA,WACjD,EAAwByC,qBAAxB,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA8CF,oBAAS,GAAvD,mBAAOG,EAAP,KAAwBC,EAAxB,KAEMC,EAAiB,uCAAG,4BAAAC,EAAA,mEAElB3C,EAFkB,gCDWJ4C,ECRqB5C,EAAK4C,ODQPnB,EAAG,iBAAiBmB,ICXnC,OAGdC,EAHc,OAKpBN,EAAQM,GALY,uDAQtBJ,GAAmB,GARG,kCDWL,IAACG,ICXI,oBAAH,qDAgBvB,OAJAE,qBAAU,WACRJ,MACC,IAGD,sBACE5C,UAAWG,IAAG,QACZ,CAAE,YAAaD,IACjB,UAAQ,QAHV,UAKE,qBAAKF,UAAU,qBACbwC,GAAStC,EAGP,sBAAKF,UAAU,aAAf,UACE,yBAAQA,UAAU,kBAAlB,UACE,qBACEA,UAAU,0CACV,UAAQ,eAFV,yBAIYE,EAAKE,MAIjB,wBACEG,KAAK,SACLP,UAAU,SACV,UAAQ,cACRQ,QAAS,WACPV,EAAW,SAKjB,sBAAKE,UAAU,kBAAf,UACE,mBAAGA,UAAU,QAAQ,UAAQ,cAA7B,SACGE,EAAKI,QAGR,oBAAGN,UAAU,QAAQ,UAAQ,aAA7B,UACGE,EAAKG,UACF,wBAAQL,UAAU,mBAAlB,kBACA,wBAAQA,UAAU,kBAAlB,qBAEH,OAEA0C,EACG,6CAEA,mBAAGO,KAAI,iBAAYT,EAAKU,OAAxB,SACGV,EAAKW,gBAtClB,cAAC,EAAD,QC1BGC,EAAgB,WAC3B,MAA8Cb,mBAAiB,IAA/D,mBAAOc,EAAP,KAAwBC,EAAxB,KACA,EAAsCf,oBAAS,GAA/C,mBAAOgB,EAAP,KAAoBC,EAApB,KACA,EAA4CjB,mBAAS,GAArD,mBAAOxC,EAAP,KAAuB0D,EAAvB,KACA,EAA4BlB,mBAAiB5C,EAAOuB,KAApD,mBAAON,EAAP,KAAeF,EAAf,KACA,EAA0B6B,mBAAS,IAAnC,mBAAO1B,EAAP,KAAcF,EAAd,KACI+C,EAAeL,EACbM,EAAcD,EAAaE,MAAK,SAAA1D,GAAI,OAAIA,EAAKE,KAAOL,MAAmB,KAEvE8D,EAAkB,uCAAG,4BAAAhB,EAAA,+EFEClB,EAAY,UEFb,OAEjB9B,EAFiB,OAIvByD,EAAmBzD,GAJI,gDAMvB2D,GAAe,GANQ,yDAAH,qDAUxBR,qBAAU,WACRa,MACC,IAEH,IAAM/D,EAAa,SAACM,GACdL,IAAmBK,GAIvBqD,EAAkBrD,IA4BpB,OAzBAsD,EAAeA,EAAaI,QAAO,SAAA5D,GACjC,OAAQU,GACN,KAAKjB,EAAOuB,IACV,OAAO,EAET,KAAKvB,EAAOwB,OACV,OAAQjB,EAAKG,UAEf,KAAKV,EAAOyB,UACV,OAAOlB,EAAKG,UAEd,QACE,MAAM,IAAIgB,MAAM,yBAIlBR,IACF6C,EAAeA,EAAaI,QAAO,SAAA5D,GACjC,IAAMY,EAAQD,EAAMkD,cAGpB,OAFc7D,EAAKI,MAAMyD,cAEZC,SAASlD,OAKxB,mCACGyC,EAEG,qBAAKvD,UAAU,yBAAf,8CAKA,qCACE,qBAAKA,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,oBAEA,qBAAKA,UAAU,QAAf,SACE,cAAC,EAAD,CACEa,MAAOA,EACPF,SAAUA,EACVD,UAAWA,EACXE,OAAQA,MAIZ,qBAAKZ,UAAU,QAAf,SACG0D,EAAanC,OAEV,cAAC,EAAD,CACE1B,MAAO6D,EACP5D,WAAYA,EACZC,eAAgBA,IAGlB,cAAC,EAAD,eAKTA,GAEC,cAAC,EAAD,CACEG,KAAMyD,EACN7D,WAAYA,UC5G9BmE,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.3cc31c8e.chunk.js","sourcesContent":["export enum Status {\n  ALL = 'all',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  selectTodo: (id: number) => void;\n  selectedTodoId: number,\n};\nexport const TodoList: React.FC<Props> = (\n  {\n    todos,\n    selectTodo,\n    selectedTodoId,\n  },\n) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr\n            key={todo.id}\n            data-cy=\"todo\"\n            className={cn(\n              { 'has-background-info-light': todo.id === selectedTodoId },\n            )}\n          >\n            <td className=\"is-vcentered\">\n              {todo.id}\n            </td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={cn({\n                'has-text-danger': !todo.completed,\n                'has-text-success': todo.completed,\n              })}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => {\n                  selectTodo(todo.id);\n                }}\n              >\n                <span className=\"icon\">\n                  <i className={cn(\n                    'far',\n                    {\n                      'fa-eye': selectedTodoId !== todo.id,\n                      'fa-eye-slash': selectedTodoId === todo.id,\n                    },\n                  )}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\n// <i className=\"far fa-eye fa-eye-slash\" />\n","import React from 'react';\nimport { Status } from '../../types/Status';\n\ntype Props = {\n  setStatus: (status: Status) => void;\n  setQuery: (query: string) => void;\n  status: Status,\n  query: string,\n};\nexport const TodoFilter: React.FC<Props> = (\n  {\n    setStatus,\n    setQuery,\n    status,\n    query,\n  },\n) => {\n  const handleSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const { value } = event.target;\n\n    switch (value) {\n      case Status.ALL:\n        setStatus(Status.ALL);\n        break;\n\n      case Status.ACTIVE:\n        setStatus(Status.ACTIVE);\n        break;\n\n      case Status.COMPLETED:\n        setStatus(Status.COMPLETED);\n        break;\n\n      default:\n        throw new Error('Unexpected filter type');\n    }\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={status}\n            onChange={handleSelect}\n          >\n            <option value={Status.ALL}>\n              All\n            </option>\n            <option value={Status.ACTIVE}>\n              Active\n            </option>\n            <option value={Status.COMPLETED}>\n              Completed\n            </option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => {\n            setQuery(event.target.value);\n          }}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query.length && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => {\n                setQuery('');\n              }}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\ntype Props = {\n  todo: Todo | null,\n  selectTodo: (id: number) => void;\n};\nexport const TodoModal: React.FC<Props> = ({ todo, selectTodo }) => {\n  const [user, setUser] = useState<User>();\n  const [userUploadError, setUserUploadError] = useState(false);\n\n  const getUserFromServer = async () => {\n    try {\n      if (todo) {\n        const userFromServer = await getUser(todo.userId);\n\n        setUser(userFromServer);\n      }\n    } catch (error) {\n      setUserUploadError(true);\n    }\n  };\n\n  useEffect(() => {\n    getUserFromServer();\n  }, []);\n\n  return (\n    <div\n      className={cn('modal',\n        { 'is-active': todo })}\n      data-cy=\"modal\"\n    >\n      <div className=\"modal-background\" />\n      {!user || !todo\n        ? <Loader />\n        : (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                {`Todo #${todo.id}`}\n              </div>\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={() => {\n                  selectTodo(0);\n                }}\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">\n                {todo.title}\n              </p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                {todo.completed\n                  ? <strong className=\"has-text-success\">Done</strong>\n                  : <strong className=\"has-text-danger\">Planned</strong>}\n\n                {' by '}\n\n                {userUploadError\n                  ? <p>Unknown user</p>\n                  : (\n                    <a href={`mailto:${user.email}`}>\n                      {user.name}\n                    </a>\n                  )}\n              </p>\n            </div>\n          </div>\n        )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { Status } from './types/Status';\n\nexport const App: React.FC = () => {\n  const [todosFromServer, setTodosFromServer] = useState<Todo[]>([]);\n  const [uploadError, setUploadError] = useState(false);\n  const [selectedTodoId, setSelectedTodoId] = useState(0);\n  const [status, setStatus] = useState<Status>(Status.ALL);\n  const [query, setQuery] = useState('');\n  let visibleTodos = todosFromServer;\n  const todoToModal = visibleTodos.find(todo => todo.id === selectedTodoId) || null;\n\n  const getTodosFromServer = async () => {\n    try {\n      const todos = await getTodos();\n\n      setTodosFromServer(todos);\n    } catch (error) {\n      setUploadError(true);\n    }\n  };\n\n  useEffect(() => {\n    getTodosFromServer();\n  }, []);\n\n  const selectTodo = (id: number) => {\n    if (selectedTodoId === id) {\n      return;\n    }\n\n    setSelectedTodoId(id);\n  };\n\n  visibleTodos = visibleTodos.filter(todo => {\n    switch (status) {\n      case Status.ALL:\n        return true;\n\n      case Status.ACTIVE:\n        return !todo.completed;\n\n      case Status.COMPLETED:\n        return todo.completed;\n\n      default:\n        throw new Error('Unexpected status');\n    }\n  });\n\n  if (query) {\n    visibleTodos = visibleTodos.filter(todo => {\n      const value = query.toLowerCase();\n      const title = todo.title.toLowerCase();\n\n      return title.includes(value);\n    });\n  }\n\n  return (\n    <>\n      {uploadError\n        ? (\n          <div className=\"notification is-danger\">\n            Can not upload todos from server\n          </div>\n        )\n        : (\n          <>\n            <div className=\"section\">\n              <div className=\"container\">\n                <div className=\"box\">\n                  <h1 className=\"title\">Todos:</h1>\n\n                  <div className=\"block\">\n                    <TodoFilter\n                      query={query}\n                      setQuery={setQuery}\n                      setStatus={setStatus}\n                      status={status}\n                    />\n                  </div>\n\n                  <div className=\"block\">\n                    {visibleTodos.length\n                      ? (\n                        <TodoList\n                          todos={visibleTodos}\n                          selectTodo={selectTodo}\n                          selectedTodoId={selectedTodoId}\n                        />\n                      )\n                      : <Loader />}\n                  </div>\n                </div>\n              </div>\n            </div>\n            {!!selectedTodoId\n              && (\n                <TodoModal\n                  todo={todoToModal}\n                  selectTodo={selectTodo}\n                />\n              )}\n          </>\n        )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}