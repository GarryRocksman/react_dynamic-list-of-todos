{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectTodo","selectedTodoId","className","map","todo","id","completed","cn","title","type","onClick","TodoFilter","setStatus","setQuery","status","query","value","onChange","event","target","placeholder","length","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","useState","user","setUser","useEffect","getUserFromServer","a","userId","userFromServer","catch","Error","href","email","name","App","todosFromServer","setTodosFromServer","setSelectedTodoId","visibleTodos","todoToModal","filter","getTodosFromServer","toLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f9509c07.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  selectTodo: (id: number) => void;\n  selectedTodoId: number,\n};\nexport const TodoList: React.FC<Props> = (\n  {\n    todos,\n    selectTodo,\n    selectedTodoId,\n  },\n) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr\n            key={todo.id}\n            data-cy=\"todo\"\n            className=\"\"\n          >\n            <td className=\"is-vcentered\">\n              {todo.id}\n            </td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={cn({\n                'has-text-danger': !todo.completed,\n                'has-text-success': todo.completed,\n              })}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => {\n                  selectTodo(todo.id);\n                }}\n              >\n                <span className=\"icon\">\n                  <i className={cn(\n                    'far',\n                    {\n                      'fa-eye': selectedTodoId !== todo.id,\n                      'fa-eye-slash': selectedTodoId === todo.id,\n                    },\n                  )}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\n// <i className=\"far fa-eye fa-eye-slash\" />\n","import React from 'react';\n\ntype Props = {\n  setStatus: (status: string) => void;\n  setQuery: (query: string) => void;\n  status: string,\n  query: string,\n};\nexport const TodoFilter: React.FC<Props> = (\n  {\n    setStatus,\n    setQuery,\n    status,\n    query,\n  },\n) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={status}\n            onChange={(event) => {\n              setStatus(event.target.value);\n            }}\n          >\n            <option value=\"all\">\n              All\n            </option>\n            <option value=\"active\">\n              Active\n            </option>\n            <option value=\"completed\">\n              Completed\n            </option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => {\n            setQuery(event.target.value);\n          }}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query.length > 0 && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => {\n                setQuery('');\n              }}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\ntype Props = {\n  todo: Todo,\n  selectTodo: (id: number) => void;\n};\nexport const TodoModal: React.FC<Props> = ({ todo, selectTodo }) => {\n  const [user, setUser] = useState<User>();\n\n  useEffect(() => {\n    const getUserFromServer = async () => {\n      const userFromServer = await getUser(todo.userId);\n\n      setUser(userFromServer);\n    };\n\n    getUserFromServer()\n      .catch(Error);\n  }, []);\n\n  return (\n    <div\n      className={cn(\n        'modal',\n        {\n          'is-active': todo,\n        },\n      )}\n      data-cy=\"modal\"\n    >\n      <div className=\"modal-background\" />\n      {!user\n        ? (\n          <Loader />\n        ) : (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                {`Todo #${todo.id}`}\n              </div>\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={() => {\n                  selectTodo(0);\n                }}\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">\n                {todo.title}\n              </p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                {todo.completed\n                  ? <strong className=\"has-text-success\">Done</strong>\n                  : <strong className=\"has-text-danger\">Planned</strong>}\n\n                {' by '}\n\n                <a href={`mailto:${user.email}`}>\n                  {user.name}\n                </a>\n              </p>\n            </div>\n          </div>\n        )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todosFromServer, setTodosFromServer] = useState<Todo[]>([]);\n  const [selectedTodoId, setSelectedTodoId] = useState(0);\n  const [status, setStatus] = useState('all');\n  const [query, setQuery] = useState('');\n  let visibleTodos = todosFromServer;\n  const todoToModal = visibleTodos.filter(todo => todo.id === selectedTodoId);\n\n  useEffect(() => {\n    const getTodosFromServer = async () => {\n      const todos = await getTodos();\n\n      setTodosFromServer(todos);\n    };\n\n    getTodosFromServer()\n      .catch(Error);\n  }, []);\n\n  const selectTodo = (id: number) => {\n    if (selectedTodoId !== id) {\n      setSelectedTodoId(id);\n    } else {\n      setSelectedTodoId(0);\n    }\n  };\n\n  switch (status) {\n    case 'all':\n      visibleTodos = todosFromServer;\n      break;\n\n    case 'active':\n      visibleTodos = visibleTodos.filter(todo => !todo.completed);\n      break;\n\n    case 'completed':\n      visibleTodos = visibleTodos.filter(todo => todo.completed);\n      break;\n    default:\n      break;\n  }\n\n  if (query) {\n    visibleTodos = visibleTodos.filter(todo => {\n      const value = query.toLowerCase();\n      const title = todo.title.toLowerCase();\n\n      return title.includes(value);\n    });\n  }\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                setQuery={setQuery}\n                setStatus={setStatus}\n                status={status}\n              />\n            </div>\n\n            <div className=\"block\">\n              {visibleTodos.length > 0\n                ? (\n                  <TodoList\n                    todos={visibleTodos}\n                    selectTodo={selectTodo}\n                    selectedTodoId={selectedTodoId}\n                  />\n                )\n                : <Loader />}\n            </div>\n          </div>\n        </div>\n      </div>\n      {selectedTodoId !== 0\n        && (\n          <TodoModal\n            todo={todoToModal[0]}\n            selectTodo={selectTodo}\n          />\n        )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}